/*! For license information please see main.5bc08b51d3c260f36716.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/animations/Paragraph.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});var s=n("./node_modules/gsap/index.js"),i=n("./app/classes/Animation.js"),a=n("./app/utils/text.js"),l=n("./node_modules/lodash/each.js"),o=n.n(l);class r extends i.default{constructor({element:e,elements:t}){super({element:e,elements:t}),(0,a.split)({element:this.element,append:!0}),(0,a.split)({element:this.element,append:!0}),this.elementLinesSpans=this.element.querySelectorAll("span span")}animateIn(){this.timelineIn=s.default.timeline({delay:.5}),this.timelineIn.set(this.element,{autoAlpha:1}),o()(this.elementsLines,((e,t)=>{this.timelineIn.fromTo(e,{y:"100%"},{delay:.2*t,duration:1.5,ease:"expo.out",y:"0%"},0)}))}animateOut(){s.default.set(this.element,{autoAlpha:0})}onResize(){this.elementsLines=(0,a.calculate)(this.elementLinesSpans)}}},"./app/classes/Page.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>p});var s=n("./node_modules/gsap/index.js"),i=n("./node_modules/prefix/index.js"),a=n.n(i),l=n("./node_modules/normalize-wheel/index.js"),o=n.n(l),r=n("./node_modules/lodash/each.js"),h=n.n(r),m=n("./node_modules/lodash/map.js"),d=n.n(m),u=n("./app/animations/Title.js"),c=n("./app/animations/Paragraph.js");Object(function(){var e=new Error("Cannot find module 'animations/Label'");throw e.code="MODULE_NOT_FOUND",e}()),Object(function(){var e=new Error("Cannot find module 'animations/Highlight'");throw e.code="MODULE_NOT_FOUND",e}());class p{constructor({element:e,elements:t,id:n}){this.selector=e,this.selectorChildren={...t,animationsLabel:'[data-animation="label"]',animationsParagraphs:'[data-animation="paragraph"]',animationsTitles:'[data-animation="title"]'},this.id=n,this.transformPrefix=a()("transform"),this.onMouseWheelEvent=this.onMouseWheel.bind(this)}create(){this.element=document.querySelector(this.selector),this.elements={},this.scroll={current:0,target:0,last:0,limit:0},d()(this.selectorChildren,((e,t)=>{e instanceof window.HTMLElement||e instanceof window.NodeList||Array.isArray(e)?this.elements[t]=e:(this.elements[t]=document.querySelectorAll(e),0===this.elements[t].length?this.elements[t]=null:1===this.elements[t].length&&(this.elements[t]=document.querySelector(e)))})),this.createAnimations()}createAnimations(){this.animations=[],this.animationsTitles=d()(this.elements.animationsTitles,(e=>new u.default({element:e}))),this.animations.push(...this.animationsTitles),this.animationsParagraphs=d()(this.elements.animationsParagraphs,(e=>new c.default({element:e}))),this.animations.push(...this.animationsParagraphs),this.animationsLabels=d()(this.elements.animationsLabels,(e=>new Object(function(){var e=new Error("Cannot find module 'animations/Label'");throw e.code="MODULE_NOT_FOUND",e}())({element:e}))),this.animations.push(...this.animationsLabels),this.aimationsHighlights=d()(this.elements.aimationsHighlights,(e=>new Object(function(){var e=new Error("Cannot find module 'animations/Highlight'");throw e.code="MODULE_NOT_FOUND",e}())({element:e}))),this.animations.push(...this.aimationsHighlights)}show(){return new Promise((e=>{this.animationIn=s.default.timeline(),this.animationIn.fromTo(this.element,{autoAlpha:0},{autoAlpha:1}),this.animationIn.call((t=>{this.addEventListeners(),e()}))}))}hide(){return new Promise((e=>{this.removeEventListeners(),this.animationIn=s.default.timeline(),this.animationIn.to(this.element,{autoAlpha:0,onComplete:e})}))}onMouseWheel(e){const{pixelY:t}=o()(e);this.scroll.target+=t}onResize(){this.elements.wrapper&&(this.scroll.limit=this.elements.wrapper.clientHeight-window.innerHeight),h()(this.animationsTitles,(e=>e.onResize()))}update(){this.scroll.target=s.default.utils.clamp(0,this.scroll.limit,this.scroll.target),this.scroll.current=s.default.utils.interpolate(this.scroll.current,this.scroll.target,.1),this.scroll.current<.01&&(this.scroll.current=0),this.elements.wrapper&&(this.elements.wrapper.style[this.transformPrefix]=`translateY(-${this.scroll.current}px)`)}addEventListeners(){window.addEventListener("mousewheel",this.onMouseWheelEvent)}removeEventListeners(){window.removeEventListener("mousewheel",this.onMouseWheelEvent)}}}},(function(e){e.h=()=>"68b86d66effec74489bb"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,